generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tb_user {
  id         Int          @id @default(autoincrement())
  name       String
  email      String
  password   String
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  deleted_at DateTime?
  tb_bill    tb_bill[]
  tb_expense tb_expense[]
  tb_revenue tb_revenue[]
}

model tb_bill {
  id          Int          @id @default(autoincrement())
  description String
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt
  deleted_at  DateTime?
  id_author   Int
  balance     Float?
  author      tb_user      @relation(fields: [id_author], references: [id])
  expenses    tb_expense[]
  revenues    tb_revenue[]
}

model tb_expense {
  id          Int       @id @default(autoincrement())
  id_author   Int
  id_bill     Int?
  description String
  status      Boolean   @default(false)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?
  balance     Float?
  author      tb_user   @relation(fields: [id_author], references: [id])
  tb_bill     tb_bill?  @relation(fields: [id_bill], references: [id])
}

model tb_revenue {
  id          Int       @id @default(autoincrement())
  id_author   Int
  id_bill     Int?
  description String
  status      Boolean   @default(false)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?
  balance     Float?
  author      tb_user   @relation(fields: [id_author], references: [id])
  tb_bill     tb_bill?  @relation(fields: [id_bill], references: [id])
}
