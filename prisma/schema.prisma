generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tb_user {
  id          Int           @id @default(autoincrement())
  name        String
  email       String
  password    String
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  deleted_at  DateTime?
  tb_bill     tb_bill[]
  tb_expenses tb_expenses[]
  tb_revenues tb_revenues[]
}

model tb_bill {
  id          Int           @id @default(autoincrement())
  value       Int
  description String
  author_id   Int
  author      tb_user       @relation(fields: [author_id], references: [id])
  expenses    tb_expenses[]
  revenues    tb_revenues[]
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  deleted_at  DateTime?
}

model tb_expenses {
  id          Int       @id @default(autoincrement())
  value       Int
  description String
  status      Boolean   @default(false)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?
  author_id   Int
  tb_bill_id  Int?
  author      tb_user   @relation(fields: [author_id], references: [id])
  tb_bill     tb_bill?  @relation(fields: [tb_bill_id], references: [id])
}

model tb_revenues {
  id          Int       @id @default(autoincrement())
  value       Int
  description String
  status      Boolean   @default(false)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?
  author_id   Int
  tb_bill_id  Int?
  author      tb_user   @relation(fields: [author_id], references: [id])
  tb_bill     tb_bill?  @relation(fields: [tb_bill_id], references: [id])
}
